<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/11/03/AMOS%E5%B9%B3%E5%8F%B0%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
      <url>/2022/11/03/AMOS%E5%B9%B3%E5%8F%B0%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 align="center">AMOS平台操作手册</h1><h2 id="一、AMOS平台页面基本信息"><a href="#一、AMOS平台页面基本信息" class="headerlink" title="一、AMOS平台页面基本信息"></a>一、AMOS平台页面基本信息</h2><ol><li><p>主页面</p><img src="https://i.postimg.cc/26DzgxPp/image.jpg" alt="主页面"  /></li><li><p>组成页面介绍</p></li><li></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis</title>
      <link href="/2022/11/01/MyBatis/"/>
      <url>/2022/11/01/MyBatis/</url>
      
        <content type="html"><![CDATA[<h2 id="一、MyBatis概述"><a href="#一、MyBatis概述" class="headerlink" title="一、MyBatis概述"></a>一、MyBatis概述</h2><ol><li><p>框架：</p><ul><li>SSM三大框架：Spring + SpringMVC + MyBatis</li><li>概念：框架就是对通用代码的封装,提前写好了一堆接口和类</li><li>一般存在形式：jar包(包中有class文件以及各种配置文件)</li></ul></li><li><p>三层架构：表现层、业务逻辑层、数据访问层(持久层)</p><blockquote><p>表现层：直接跟前端交互(接收前端请求、返回json数据给前端)</p><p>业务逻辑层：处理表现层转发来的请求、将数据访问层的数据返回给表现层</p><p>数据访问层：直接操作数据库完成CRUD、并将获得的数据返回业务逻辑层</p></blockquote></li><li><p>JDBC的不足：</p><ul><li>SQL语句写死在了Java程序中,违背了OCP</li><li>不能实现自动化值传递</li><li>不能对象创建自动化</li></ul></li><li><p>关于MyBatis：</p><ul><li>MyBatis本质是对JDBC的封装,通过MyBatis完成CRUD</li><li>MyBatis在三层架构中负责数据访问层,属于数据访问层框架</li></ul></li><li><p>ORM(对象关系映射)</p><blockquote><p>O(Object)：Java虚拟机中的Java对象</p><p>R(Relational)：关系型数据库</p><p>M(Mapping)：指实现Java虚拟机中Java对象与数据库表中一行纪录的转换映射</p></blockquote></li></ol><h2 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h2>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql笔记</title>
      <link href="/2022/09/23/Mysql%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/09/23/Mysql%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、数据库概述"><a href="#一、数据库概述" class="headerlink" title="一、数据库概述"></a>一、数据库概述</h1><ol><li><p>数据库的引入：实现数据“持久化”。</p><blockquote><p>持久化：将内存中数据存储在关系型数据库、磁盘文件、XML文件等中</p></blockquote></li><li><p>数据库相关概念：</p><ul><li>DB：数据库(Database)：即存储数据的“仓库”，本质是一个文件系统。</li><li>DBMS：数据库管理系统(Database Management System)：是一种管理数据库的大型软件，用于建立、使用和维护数据库。</li><li>SQL：结构化查询语言(Structured Query Language)：专门用来与数据库通信的语言。</li></ul></li><li><p>数据库管理系统、数据库与表的关系：</p><img src="/2022/09/23/Mysql%E7%AC%94%E8%AE%B0/%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg" class=""> </li><li><p>表的关联关系：</p><ul><li>一对一关联</li><li>一对多关联</li><li>多对多关联</li><li>自我引用</li></ul></li></ol><blockquote><p>一些命令：</p><ul><li>启动MySQL服务：net start MySQL服务名</li><li>停止MySQL服务：net stop MySQL服务名</li><li>登录：mysql -h 主机名 -P 端口号 -u 用户名 -p密码</li><li>退出登录：exit 或 quit 或 Crtl + Z</li></ul></blockquote><h2 id="常见问题汇总"><a href="#常见问题汇总" class="headerlink" title="常见问题汇总"></a>常见问题汇总</h2><ol><li><p>root用户密码忘记，重置操作如下：</p><img src="/2022/09/23/Mysql%E7%AC%94%E8%AE%B0/%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE.jpg" class=""> </li><li><p>报错：不是内部或外部命令</p><p>原因：环境变量问题</p></li><li><p>报错：mysql本地计算机上的MySQL服务启动后停止，某些服务在未由其他服务或程序使用时将自动停止</p><p>解决：清空data内容—&gt;bin目录下打开命令行输入：mysqld –initialize—&gt;启动MySQL—&gt;在data中的.err文件找到随机生成密码—&gt;命令行登录MySQL—&gt;更改密码：ALTER user ‘root‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘新密码’;—&gt;刷新：flush privileges</p></li></ol><h1 id="二、SQL概述"><a href="#二、SQL概述" class="headerlink" title="二、SQL概述"></a>二、SQL概述</h1><h2 id="1-SQL分类"><a href="#1-SQL分类" class="headerlink" title="1.SQL分类"></a>1.SQL分类</h2><ol><li>DDL(数据定义语言)<ul><li><em>CREATE DATABASE</em> - 创建新数据库</li><li><em>ALTER DATABASE</em> - 修改数据库</li><li><em>CREATE TABLE</em> - 创建新表</li><li><em>ALTER TABLE</em> - 变更数据库表</li><li><em>DROP TABLE</em> - 删除表</li><li><em>CREATE INDEX</em> - 创建索引（搜索键）</li><li><em>DROP INDEX</em> - 删除索引</li></ul></li><li>DML(数据操作语言)<ul><li><em>SELECT</em> - 从数据库表中获取数据</li><li><em>UPDATE</em> - 更新数据库表中的数据</li><li><em>DELETE</em> - 从数据库表中删除数据</li><li><em>INSERT INTO</em> - 向数据库表中插入数据</li></ul></li><li>DCL(数据控制语言)<ul><li>COMMIT - 提交(事务)</li><li>ROLLBACK - 撤销(事务)</li><li>SAVEPOINT - 设立保存点</li><li>GRANT - 赋予权限</li><li>REVOKE - 回收权限</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java知识点</title>
      <link href="/2022/09/13/Java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2022/09/13/Java%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><ol><li>Java特点</li><li>JDK、JRE与JVM三者关系</li><li>API文档</li><li>注释</li><li>命名规则与规范</li></ol><h1 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、基本语法</h1><ol><li>数据类型</li><li>运算符</li><li>条件语句</li><li>循环语句</li><li>跳转语句</li><li> 短路与/逻辑与区别</li></ol><h1 id="三、面向对象"><a href="#三、面向对象" class="headerlink" title="三、面向对象"></a>三、面向对象</h1><ol><li><p>面向对象与面向过程</p></li><li><p>方法重载与方法重写</p></li><li><p>初始化顺序</p></li><li><p>数组初始化</p></li><li><p>可变形参数组与方法</p></li><li><p>值传递机制</p></li><li><p>对象的销毁和作用域</p></li><li><p>this与super</p><img src="/2022/09/13/Java%E7%9F%A5%E8%AF%86%E7%82%B9/this%E4%B8%8Esuper.png" class=""> </li><li><p>封装</p><img src="/2022/09/13/Java%E7%9F%A5%E8%AF%86%E7%82%B9/%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90.png" class=""> </li><li><p>继承</p></li><li><p>多态</p></li><li><p>组合</p><img src="/2022/09/13/Java%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%BB%84%E5%90%88%E4%B8%8E%E7%BB%A7%E6%89%BF.png" class=""> </li><li><p>代理</p></li><li><p>向上转型与向下转型</p></li><li><p>static关键字</p></li><li><p>final关键字</p></li><li><p>instanceof关键字</p></li><li><p>接口</p></li><li><p>抽象类</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Java知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态博客搭建总结</title>
      <link href="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/"/>
      <url>/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h1><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h2><ul><li><p>下载地址：<a href="https://nodejs.org/en/" title="转到官网">起飞</a></p></li><li><p>安装验证：<strong>node -v</strong>      <strong>npm -v</strong></p></li></ul><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h2><ul><li>下载地址：<a href="https://git-scm.com/download/win" title="转到官网">起飞</a></li><li>安装验证：<strong>git -v</strong></li></ul><h2 id="3-安装cnpm"><a href="#3-安装cnpm" class="headerlink" title="3.安装cnpm"></a>3.安装cnpm</h2><ul><li>安装命令：<strong>npm install -g cnpm –registry==<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></strong></li><li>安装验证：<strong>cnpm -v</strong><blockquote><p>注：国内镜像源速度慢，所以利用npm安装cnpm(淘宝镜像源)</p></blockquote></li></ul><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><ul><li>安装命令：<strong>cnpm install -g hexo-cli</strong></li><li>安装验证：<strong>hexo -v</strong></li></ul><blockquote><p>注：安装完成后，检查环境变量配置是否有遗漏或者路径错误</p></blockquote><img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" class=""> <h1 id="二、Github配置"><a href="#二、Github配置" class="headerlink" title="二、Github配置"></a>二、Github配置</h1><h2 id="1-在Github建库"><a href="#1-在Github建库" class="headerlink" title="1.在Github建库"></a>1.在Github建库</h2><ul><li>创建一个为<strong>用户名.github.io</strong>的仓库</li><li>建库页面如下(爆红是因为已经建过了)：<img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/%E5%BB%BA%E5%BA%93.png" class=""> <blockquote><ol><li>未注册过Github可用邮箱注册，注册时须在邮箱验证</li><li>以后网站访问地址为：http://用户名.github.io</li></ol></blockquote></li></ul><h2 id="2-配置SSH免密登录"><a href="#2-配置SSH免密登录" class="headerlink" title="2.配置SSH免密登录"></a>2.配置SSH免密登录</h2><ol><li><p>在任意一个空文件夹下右击打开<strong>Git Bash Here</strong>输入命令：ssh-keygen -t rsa -C “github邮件地址”，连敲四次回车，出现下图代表成功</p><img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/ssh%E5%AF%86%E5%8C%99.png" class=""> </li><li><p>在C:\Users路径下找到.ssh文件夹，用记事本打开id_rsa.pub文件，全选复制里面内容</p></li><li><p>打开Github主页，进入<strong>settings-&gt; SSH and GPG keys -&gt; New SSH key</strong>,将内容复制进<strong>Key</strong>中，<strong>Title</strong>随便写，保存</p></li><li><p>在<strong>Git Bash Here</strong>中输入命令：<strong>ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;">&#x67;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;</a></strong>，然后输入<strong>yes</strong>，看到<strong>Hi······</strong>则说明配置成功</p></li><li><p>在<strong>Git Bash Here</strong>中输入<strong>git config –global user.name “用户名”</strong> ，回车再输入git config –global user.email  “注册邮箱”，配置完成。</p></li></ol><h2 id="3-利用hexo框架搭建博客"><a href="#3-利用hexo框架搭建博客" class="headerlink" title="3.利用hexo框架搭建博客"></a>3.利用hexo框架搭建博客</h2><ol><li><p>新建文件夹，作为你以后存放博客文件和代码的地方，并在该文件夹里右击打开<strong>Git  Bash Here</strong>,输入命令：<strong>hexo init</strong>，初始化后如下图：</p><img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/Init.png" class=""> </li><li><p>在<strong>Git Bash Here</strong>中依次输入命令：<strong>hexo g</strong> 、<strong>hexo s</strong>，可打开<strong><a href="http://localhost:4000/">http://localhost:4000</a></strong>访问你的博客</p><blockquote><p>hexo g 表示在public文件夹下生成相关html文件</p><p>hexo s 表示开启本地预览服务</p><p>hexo d 表示将文件部署到设定的仓库中</p><p>hexo clean 表示清理缓存文件，网站显示异常可输入该命令</p></blockquote></li></ol><h2 id="4-将博客部署到Github"><a href="#4-将博客部署到Github" class="headerlink" title="4.将博客部署到Github"></a>4.将博客部署到Github</h2><ol><li><p>在你的博客文件夹下打开<strong>Git Bash Here</strong>输入命令：<strong>npm install hexo-deployer-git –save</strong></p></li><li><p>在你的博客文件夹下找到_config.yml文件，用VScode打开，找到deploy:并修改为如下图：</p> </li></ol><blockquote><p>注：repo后为你的Github仓库链接</p></blockquote><p>​                <img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/%E4%BB%93%E5%BA%93%E9%93%BE%E6%8E%A5.png" class=""> </p><ol start="3"><li>在<strong>Git Bash Here</strong>中继续输入命令：<strong>hexo d</strong>,将本地博客文件发送到Github仓库中，此时可能需要让你输入Github的用户名和密码，输入即可，推送成功后可通过Github链接访问你的博客网站</li></ol><h1 id="三、主题"><a href="#三、主题" class="headerlink" title="三、主题"></a>三、主题</h1><h2 id="1-寻找主题"><a href="#1-寻找主题" class="headerlink" title="1.寻找主题"></a>1.寻找主题</h2><ul><li>Hexo官网：<a href="https://hexo.io/themes/">起飞</a></li><li>B站</li><li>大佬分享</li></ul><h2 id="2-下载主题"><a href="#2-下载主题" class="headerlink" title="2.下载主题"></a>2.下载主题</h2><ol><li><p>在你的博客文件夹下打开<strong>Git Bash Here</strong>输入命令：<strong>git clone 主题http链接  themes/主题名称</strong></p></li><li><p>在博客文件夹中的<strong>theme文件夹</strong>下可查看是否下载成功</p><h2 id="3-更换主题"><a href="#3-更换主题" class="headerlink" title="3.更换主题"></a>3.更换主题</h2></li><li><p>打开你的博客文件夹下的_config.yml文件，找到theme: landscape，并将landscape修改为你的主题名如下：</p><img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2.png" class=""> </li><li><p>在你的博客文件夹下打开<strong>Git Bash Here</strong>输入命令：<strong>hexo g</strong>重新生成</p></li><li><p>刷新仓库代码，并打开你的博客网站欣赏新主题</p><blockquote><p>注：一般得等一会才能生效</p></blockquote></li></ol><h2 id="4-修改主题"><a href="#4-修改主题" class="headerlink" title="4.修改主题"></a>4.修改主题</h2><ul><li>在你的主题文件夹中找到_config.yml文件(并非博客文件夹下的_config.yml文件)，打开修改里面内容即可</li><li>每次修改完须在博客文件夹下打开<strong>Git Bash Here</strong>执行命令：hexo g/hexo s(不看预览效果可不执行)/hexo d</li></ul><h1 id="四、写博客"><a href="#四、写博客" class="headerlink" title="四、写博客"></a>四、写博客</h1><h2 id="1-编辑工具"><a href="#1-编辑工具" class="headerlink" title="1.编辑工具"></a>1.编辑工具</h2><ul><li>T0：<strong>Typora</strong>(本人使用这款，目前Typora已收费，可通过QQ联系本人破解版)</li><li>T1：<strong>StackEdit</strong>、<strong>dillinger</strong>、<strong>QOwnNotes</strong></li><li>T2：<strong>VSCode</strong>、<strong>markdownPad</strong>等</li></ul><h2 id="2-写博客"><a href="#2-写博客" class="headerlink" title="2.写博客"></a>2.写博客</h2><ol><li><p>创建md文件：方法一：在博客文件下打开<strong>Git Bash Here</strong>执行命令：<strong>hexo new 博客名</strong>,此时在博客目录下的<strong>\source\_posts</strong>中生成了相关md文件</p><p>​                           方法二：在<strong>\source\_posts</strong>中手动创建md文件</p></li><li><p>用编辑器打开该md文件，编写完成后保存</p></li><li><p>在博客文件下打开<strong>Git Bash Here</strong>依次执行命令：<strong>hexo clean</strong>、<strong>hexo g</strong>、<strong>hexo d</strong></p></li></ol><h2 id="3-图片插入"><a href="#3-图片插入" class="headerlink" title="3.图片插入"></a>3.图片插入</h2><ul><li><p>在博客文件夹中的_config.yml文件中修改配置如下：</p><img src="/2022/09/01/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90.png" class=""> </li><li><p>此时<strong>hexo g</strong>后会在<strong>\source\_posts</strong>下生成该md文件的资源文件夹，将所插入图片复制进去就行，后期<strong>hexo d</strong>时会将这些资源也发送到<strong>Github</strong>仓库中</p></li><li><p>使用 来在Typora中<u>稳定的</u>插入图片，其中只需将image.jpg替换为你的图片名加后缀</p></li></ul><h1 id="五、后续"><a href="#五、后续" class="headerlink" title="五、后续"></a>五、后续</h1><h2 id="1-站点部署"><a href="#1-站点部署" class="headerlink" title="1.站点部署"></a>1.站点部署</h2><ul><li><p>可在国内某云购买</p></li><li><p>Github pages(国内访问速度慢)</p></li><li><p>netlify(可与后文提到的cloudflare搭配)</p><h2 id="2-访问加速"><a href="#2-访问加速" class="headerlink" title="2.访问加速"></a>2.访问加速</h2></li><li><p>cloudflare</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 静态博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
